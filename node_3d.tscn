[gd_scene load_steps=8 format=3 uid="uid://g6728w0ixx25"]

[ext_resource type="Texture2D" uid="uid://pf6gcvcphwgi" path="res://icon.svg" id="1_byfkq"]
[ext_resource type="Shader" path="res://node_3d.gdshader" id="2_7r41k"]

[sub_resource type="PlaneMesh" id="PlaneMesh_re4s6"]
size = Vector2(10, 10)

[sub_resource type="Shader" id="Shader_q7k0i"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_fu7fk"]
render_priority = 0
shader = SubResource("Shader_q7k0i")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(10, 10, 10)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = ExtResource("1_byfkq")

[sub_resource type="SphereMesh" id="SphereMesh_62j1q"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_x66qr"]
render_priority = 0
shader = ExtResource("2_7r41k")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 0.1
shader_parameter/roughness = 0.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.1
shader_parameter/metallic = 1.0
shader_parameter/uv1_scale = null
shader_parameter/uv1_offset = null
shader_parameter/uv2_scale = null
shader_parameter/uv2_offset = null
shader_parameter/refraction_index = -0.01

[node name="Node3D" type="Node3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.19305, 0, 0)

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 2.98023e-08, -1, 0, 1, 2.98023e-08, 0, 0, 0.168613)
mesh = SubResource("PlaneMesh_re4s6")
surface_material_override/0 = SubResource("ShaderMaterial_fu7fk")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 3.17247)

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
transform = Transform3D(1.13, 0, 0, 0, -4.93939e-08, 1.13, 0, -1.13, -4.93939e-08, -1.65163, 0.489, 6.87427)
mesh = SubResource("SphereMesh_62j1q")
surface_material_override/0 = SubResource("ShaderMaterial_x66qr")
